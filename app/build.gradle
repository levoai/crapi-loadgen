/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.4.2/userguide/building_java_projects.html
 */

// Apply the application plugin to add support for building a CLI application in Java.
plugins {
    id 'java'
    id 'com.bmuschko.docker-java-application' version '7.3.0'
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    implementation 'org.seleniumhq.selenium:selenium-java:4.1.4'
    implementation 'io.github.bonigarcia:webdrivermanager:3.4.0'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'

    // Use JUnit Jupiter for testing.
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
}

docker {
    javaApplication {
        baseImage = 'openjdk:bullseye'
        maintainer = 'Levo, Inc'
        images = ['levoai/crapi-loadgen:latest']
    }
}
dockerCreateDockerfile {
    instruction 'RUN apt-get install -y wget'

    // Set the Chrome repo.
    instruction 'RUN wget -q -O - https://dl-ssl.google.com/linux/linux_signing_key.pub | apt-key add - && echo "deb http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google.list'

    // Install Chrome.
    instruction 'RUN apt-get update && apt-get -y install google-chrome-stable'

    // Install ChromeDriver.
    instruction 'RUN wget https://chromedriver.storage.googleapis.com/101.0.4951.41/chromedriver_linux64.zip'
    instruction 'RUN unzip chromedriver_linux64.zip'
    instruction 'RUN mv chromedriver /usr/local/bin/chromedriver'
    instruction 'RUN chmod +x /usr/local/bin/chromedriver'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
